{"version":3,"sources":["pages/SecretPage.js","pages/SignInPage.js","router.js","index.js"],"names":["SecretPage","useAuth0","user","logout","getAccessTokenSilently","useState","apiToken","setApiToken","useEffect","a","audience","token","console","log","error","onClick","email","SignInPage","loginWithPopup","history","useHistory","push","RouterProvider","path","to","PrivateRoute","children","rest","isAuthenticated","isLoading","ReactDOM","render","StrictMode","domain","clientId","redirectUri","window","location","origin","document","getElementById"],"mappings":"uOAGaA,EAAa,WAExB,MAAiDC,cAAzCC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,uBACtB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAgBA,OAdAC,qBAAU,WACR,sBAAC,4BAAAC,EAAA,+EAEuBL,EAAuB,CACzCM,SAAU,iCAHf,OAESC,EAFT,OAKGJ,EAAYI,GACZC,QAAQC,IAAIF,GANf,gDAQGC,QAAQE,MAAR,MARH,wDAAD,KAWC,CAACV,IAGF,qCACE,wBAAQW,QAASZ,EAAjB,sBACA,qCAAQD,EAAKc,MAAb,0CACA,8CAAiBV,SCvBVW,EAAa,WACxB,IAAQC,EAAmBjB,cAAnBiB,eACFC,EAAUC,cAEhB,OACE,wBACEL,QAAO,sBAAE,sBAAAN,EAAA,sEACDS,IADC,OAEPC,EAAQE,KAAK,WAFN,2CADX,sB,eCESC,EAAiB,WAC5B,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,CAAcA,KAAK,UAAnB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAUC,GAAG,mBAMfC,EAAe,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAaC,EAAW,iBAC9C,EAAuC1B,cAA/B2B,EAAR,EAAQA,gBAER,OAFA,EAAyBC,UAEH,kDAGpB,cAAC,IAAD,2BAAWF,GAAX,aACGC,EAAkBF,EAAW,cAAC,IAAD,CAAUF,GAAG,gBC5BjDM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CACEC,OAAO,4BACPC,SAAS,mCACTC,YAAaC,OAAOC,SAASC,OAH/B,SAKE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.cb1ceaa5.chunk.js","sourcesContent":["import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useState, useEffect } from 'react';\n\nexport const SecretPage = () => {\n\n  const { user, logout, getAccessTokenSilently } = useAuth0();\n  const [apiToken, setApiToken] = useState(\"\");\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const token = await getAccessTokenSilently({\n          audience: 'https://auth0-jwt-authorizer',\n        });\n        setApiToken(token)\n        console.log(token);\n      } catch (e) {\n        console.error(e);\n      }\n    })();\n  }, [getAccessTokenSilently]);\n\n  return (\n    <>\n      <button onClick={logout}>Sign Out</button>\n      <h1>Hi {user.email}! Welcome to this Super Secret Page!</h1>\n      <div>token is : {apiToken}</div>\n\n    </>\n  );\n};","import { useAuth0 } from \"@auth0/auth0-react\";\nimport { useHistory } from \"react-router\";\n\nexport const SignInPage = () => {\n  const { loginWithPopup } = useAuth0();\n  const history = useHistory();\n\n  return (\n    <button\n      onClick={async () => {\n        await loginWithPopup();\n        history.push(\"/secret\");\n      }}\n    >\n      Sign In\n    </button>\n  );\n};","import { useAuth0 } from \"@auth0/auth0-react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\nimport { SecretPage } from \"./pages/SecretPage\";\nimport { SignInPage } from \"./pages/SignInPage\";\n\nexport const RouterProvider = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/sign-in\">\n          <SignInPage />\n        </Route>\n        <PrivateRoute path=\"/secret\">\n          <SecretPage />\n        </PrivateRoute>\n        <Redirect to=\"/sign-in\" />\n      </Switch>\n    </Router>\n  );\n};\n\nconst PrivateRoute = ({ children, ...rest }) => {\n  const { isAuthenticated, isLoading } = useAuth0();\n\n  if (isLoading) return <>...loading</>;\n\n  return (\n    <Route {...rest}>\n      {isAuthenticated ? children : <Redirect to=\"sign-in\" />}\n    </Route>\n  );\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Auth0Provider } from \"@auth0/auth0-react\";\nimport { RouterProvider } from \"./router\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Auth0Provider\n      domain=\"dev-an-c0mik.eu.auth0.com\"\n      clientId=\"tp8yCcobMlux0PR22KAmY7rYCeaVvi3m\"\n      redirectUri={window.location.origin}\n    >\n      <RouterProvider />\n    </Auth0Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}